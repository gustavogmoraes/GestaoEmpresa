<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
  <metadata name="colunaCodigo.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colunaCodigoFabricante.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colunaStatus.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colunaNome.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colunaPrecoCompra.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colunaPrecoVenda.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colunaQuantidade.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colunaDetalhar.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>